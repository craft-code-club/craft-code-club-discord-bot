name: 'Publish'


on:
  workflow_dispatch:

  release:
    types: [created]


env:
  IMAGE_NAME: 'discord-bot'


jobs:
  build:
    name: 'Building Docker Image'
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v5.0.0

    - name: 'Resolve image tag'
      id: tag
      run: echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT

    - name: 'Show image tag'
      run: |
        echo "Image tag: ${{ steps.tag.outputs.version }}"

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v3

    - name: Build Docker
      run: |
        docker build -f ./Dockerfile . -t ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.version }}

    - name: 'Save Docker Image'
      run: |
        docker save -o ${{ env.IMAGE_NAME }}.tar ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.version }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.IMAGE_NAME }}
        path: ${{ env.IMAGE_NAME }}.tar
        retention-days: 1



  publish:
    name: 'Publish Docker Image to Docker Hub'
    runs-on: ubuntu-latest
    needs: build

    steps:

    - name: 'Download artifact'
      uses: actions/download-artifact@v5
      with:
        name: ${{ env.IMAGE_NAME }}

    - name: 'Resolve image tag'
      id: tag
      run: echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT

    - name: 'Show image tag'
      run: |
        echo "Image tag: ${{ steps.tag.outputs.version }}"

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v3

    - name: 'Login to Docker Hub'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Load & Push Docker Image
      run: |
        docker load -i ${{ env.IMAGE_NAME }}.tar

    - name: 'Add Docker Image Tags'
      run: |
        docker tag ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.version }} ${{ secrets.DOCKERHUB_USERNAME  }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.version }}
        docker tag ${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.version }} ${{ secrets.DOCKERHUB_USERNAME  }}/${{ env.IMAGE_NAME }}:latest

    - name: 'Push Docker Image to GitHub Container Registry'
      run: |
        docker push --all-tags ${{ secrets.DOCKERHUB_USERNAME  }}/${{ env.IMAGE_NAME }}
